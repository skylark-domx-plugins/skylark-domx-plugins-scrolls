/**
 * skylark-domx-plugins-scrolls - The skylark scrolls plugins library for dom api extension
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-domx-plugins/skylark-domx-plugins-scrolls/
 * @license MIT
 */
define(["skylark-langx/langx","skylark-domx-browser","skylark-domx-eventer","skylark-domx-noder","skylark-domx-geom","skylark-domx-query","skylark-domx-plugins-base","./scrolls"],function(t,e,i,s,o,n,f,l){"use strict";var a=f.Plugin.inherit({klassName:"Affix",pluginName:"lark.scrolls.affix",options:{offset:0,target:window},_construct:function(e,i){this.overrided(e,i),this.$target=n(this.options.target).on("scroll.affix.data-api",t.proxy(this.checkPosition,this)).on("click.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=this.$(),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()},getState:function(t,e,i,s){var o=this.$target.scrollTop(),n=this.$element.offset(),f=this.$target.height();if(null!=i&&"top"==this.affixed)return o<i&&"top";if("bottom"==this.affixed)return null!=i?!(o+this.unpin<=n.top)&&"bottom":!(o+f<=t-s)&&"bottom";var l=null==this.affixed,a=l?o:n.top;return null!=i&&o<=i?"top":null!=s&&a+(l?f:e)>=t-s&&"bottom"},getPinnedOffset:function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(a.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},checkPositionWithEventLoop:function(){setTimeout(t.proxy(this.checkPosition,this),1)},checkPosition:function(){if(this.$element.is(":visible")){var t=this.$element.height(),e=this.options.offset,s=e.top,o=e.bottom,f=Math.max(n(document.documentElement).height(),n(document.body).height());"object"!=typeof e&&(o=s=e),"function"==typeof s&&(s=e.top(this.$element)),"function"==typeof o&&(o=e.bottom(this.$element));var l=this.getState(f,t,s,o);if(this.affixed!=l){null!=this.unpin&&this.$element.css("top","");var r="affix"+(l?"-"+l:""),h=i.create(r+".affix");if(this.$element.trigger(h),h.isDefaultPrevented())return;this.affixed=l,this.unpin="bottom"==l?this.getPinnedOffset():null,this.$element.removeClass(a.RESET).addClass(r).trigger(r.replace("affix","affixed")+".affix")}"bottom"==l&&this.$element.offset({top:f-t-o})}}});return a.RESET="affix affix-top affix-bottom",f.register(a),l.Affix=a});
//# sourceMappingURL=sourcemaps/affix.js.map
