{"version":3,"sources":["skylark-domx-plugins-scrolls.js"],"names":["define","plugins","scrolls","langx","browser","eventer","noder","geom","$","Affix","Plugin","inherit","klassName","pluginName","options","offset","target","window","_construct","elm","this","overrided","$target","on","proxy","checkPosition","checkPositionWithEventLoop","$element","affixed","unpin","pinnedOffset","getState","scrollHeight","height","offsetTop","offsetBottom","scrollTop","position","targetHeight","top","initializing","colliderTop","colliderHeight","getPinnedOffset","removeClass","RESET","addClass","setTimeout","is","bottom","Math","max","document","body","affix","css","affixType","e","create","trigger","isDefaultPrevented","replace","register","finder","styler","AutoScroll","scrollSensitivity","scrollSpeed","bubbleScroll","rootEl","autoScrolls","_autoScroll","debounce","x","y","sens","speed","winScroller","scrollingElement","scrollEl","scrollableParent","layersOut","currentParent","scrollWidth","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","el","rect","boundingRect","left","right","width","scrollLeft","overflowX","overflowY","abs","i","clearInterval","pid","scrollThisInstance","setInterval","scrollOffsetY","layer","scrollOffsetX","scrollBy","bind","destroy","_clearAutoScrolls","_cancelThrottle","_nulling","handle","_throttleTimeout","forEach","autoScroll","cancel","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","scrollParentEl","length","InfiniteScroll","dataSource","hybrid","percentage","curScrollTop","curPercentage","getPercentage","fetchingData","onScroll","remove","empty","outerHTML","disable","off","enable","end","content","append","outerHeight","get","fetchData","force","moreBtn","load","self","fetch","helpers","$loader","loader","resp","undefined","label","documentElement","ScrollSpy","$body","$scrollElement","selector","offsets","targets","activeTarget","process","refresh","getScrollHeight","that","offsetMethod","offsetBase","isWindow","find","map","$el","href","data","attr","$href","test","sort","a","b","each","push","maxScroll","activate","clear","active","parents","parent","closest","parentsUntil","main"],"mappings":"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","file":"../skylark-domx-plugins-scrolls.js","sourcesContent":["define('skylark-domx-plugins-scrolls/scrolls',[\r\n    \"skylark-domx-plugins-base/plugins\"\r\n],function (plugins) {\r\n    'use strict';\r\n\r\n    return plugins.scrolls = {};\r\n\r\n});\ndefine('skylark-domx-plugins-scrolls/affix',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./scrolls\"\n],function(langx,browser,eventer,noder,geom,$,plugins,scrolls){\n\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = plugins.Plugin.inherit({\n        klassName: \"Affix\",\n\n        pluginName : \"lark.scrolls.affix\",\n\n        options : {\n          offset: 0,\n          target: window\n        },\n\n        _construct : function(elm,options) {\n          this.overrided(elm,options);\n\n          this.$target = $(this.options.target)\n            .on('scroll.affix.data-api', langx.proxy(this.checkPosition, this))\n            .on('click.affix.data-api',  langx.proxy(this.checkPositionWithEventLoop, this))\n\n          this.$element     = this.$()\n          this.affixed      = null;\n          this.unpin        = null;\n          this.pinnedOffset = null;\n\n          this.checkPosition();\n        },\n\n        getState : function (scrollHeight, height, offsetTop, offsetBottom) {\n          var scrollTop    = this.$target.scrollTop()\n          var position     = this.$element.offset()\n          var targetHeight = this.$target.height()\n\n          if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n          if (this.affixed == 'bottom') {\n            if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n            return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n          }\n\n          var initializing   = this.affixed == null\n          var colliderTop    = initializing ? scrollTop : position.top\n          var colliderHeight = initializing ? targetHeight : height\n\n          if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n          if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n          return false\n        },\n\n        getPinnedOffset : function () {\n          if (this.pinnedOffset) return this.pinnedOffset\n          this.$element.removeClass(Affix.RESET).addClass('affix')\n          var scrollTop = this.$target.scrollTop()\n          var position  = this.$element.offset()\n          return (this.pinnedOffset = position.top - scrollTop)\n        },\n\n        checkPositionWithEventLoop : function () {\n          setTimeout(langx.proxy(this.checkPosition, this), 1)\n        },\n\n        checkPosition : function () {\n          if (!this.$element.is(':visible')) return\n\n          var height       = this.$element.height()\n          var offset       = this.options.offset\n          var offsetTop    = offset.top\n          var offsetBottom = offset.bottom\n          var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n          if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n          if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n          if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n          var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n          if (this.affixed != affix) {\n            if (this.unpin != null) this.$element.css('top', '')\n\n            var affixType = 'affix' + (affix ? '-' + affix : '')\n            var e         = eventer.create(affixType + '.affix')\n\n            this.$element.trigger(e)\n\n            if (e.isDefaultPrevented()) return\n\n            this.affixed = affix\n            this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n            this.$element\n              .removeClass(Affix.RESET)\n              .addClass(affixType)\n              .trigger(affixType.replace('affix', 'affixed') + '.affix')\n          }\n\n          if (affix == 'bottom') {\n            this.$element.offset({\n              top: scrollHeight - height - offsetBottom\n            })\n          }\n        }\n  });\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  plugins.register(Affix);\n\n  return scrolls.Affix = Affix;\n});\n\ndefine('skylark-domx-plugins-scrolls/auto-scroll',[\r\n  \"skylark-langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./scrolls\"\r\n],function(langx,browser,eventer,noder,finder,geom,styler,$,plugins,scrolls){\r\n\r\n  'use strict';\r\n\r\n\t// INFINITE SCROLL CONSTRUCTOR AND PROTOTYPE\r\n\r\n  var AutoScroll = plugins.Plugin.inherit({\r\n        klassName: \"AutoScroll\",\r\n\r\n        pluginName : \"lark.scrolls.autoscroll\",\r\n\r\n        options : {\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true\r\n        },\r\n\r\n        _construct : function(rootEl,options) {\r\n\t        this.overrided(rootEl,options);\r\n    \t\tthis.autoScrolls = [];\r\n\r\n\r\n\t\t\tthis._autoScroll = langx.debounce( (x,y) => {\r\n\t\t\t\t///var _this = rootEl ? rootEl[expando] : window,\r\n\t\t\t\tvar\tsens = options.scrollSensitivity,\r\n\t\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\t\twinScroller = noder.scrollingElement();\r\n\r\n\t\t\t\tthis.scrollEl = finder.scrollableParent(rootEl, true);\r\n\r\n\r\n\t\t\t\tvar layersOut = 0;\r\n\t\t\t\tvar currentParent = this.scrollEl;\r\n\t\t\t\tvar autoScrolls = this.autoScrolls;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\t\trect = geom.boundingRect(el),\r\n\r\n\t\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\t\tvx,\r\n\t\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\t\tcss = styler.css(el);\r\n\r\n\t\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\t\tscrollPosY = el.scrollTop;\r\n\r\n\t\t\t\t\tif (el === winScroller) {\r\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvx = canScrollX && (Math.abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\t\tvy = canScrollY && (Math.abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\t\tthis.scrollThisInstance = true;\r\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\t\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlayersOut++;\r\n\t\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = finder.scrollableParent(currentParent, false)));\r\n\t\t\t}, 30);\r\n\t\t},\r\n\r\n\t\tdestroy: function () {\r\n\t\t\tthis._clearAutoScrolls();\r\n            this._cancelThrottle();\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\r\n\t\thandle : function(x,y) {\r\n\t\t\tthis._throttleTimeout = this._autoScroll(x,y);\r\n\t\t},\r\n\r\n\t\t_clearAutoScrolls : function () {\r\n\t\t\tthis.autoScrolls.forEach(function(autoScroll) {\r\n\t\t\t\tclearInterval(autoScroll.pid);\r\n\t\t\t});\r\n\t\t\tthis.autoScrolls = [];\r\n\t\t},\r\n\r\n\t\t_cancelThrottle : function () {\r\n\t\t\t//clearTimeout(_throttleTimeout);\r\n\t\t\t//_throttleTimeout = void 0;\r\n\t\t\tif (this._throttleTimeout && this._throttleTimeout.cancel) {\r\n\t\t\t\tthis._throttleTimeout.cancel();\r\n\t\t\t\tthis._throttleTimeout = void 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\r\n\t\t_nulling : function () {\r\n\r\n\t\t\t\r\n\t\t\tthis.pointerElemChangedInterval = null;\r\n\t\t\tthis.lastPointerElemX = null;\r\n\t\t\tthis.lastPointerElemY = null;\r\n\r\n\t\t\tthis.scrollEl =\r\n\t\t\tthis.scrollParentEl =\r\n\t\t\tthis.autoScrolls.length = null;\r\n\r\n\t\t}\r\n\r\n  });\r\n\r\n\r\n  plugins.register(AutoScroll);\r\n\r\n  return scrolls.AutoScroll = AutoScroll;\t\r\n});\r\n\ndefine('skylark-domx-plugins-scrolls/infinite-scroll',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./scrolls\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,scrolls){\r\n\r\n  'use strict';\r\n\r\n\t// INFINITE SCROLL CONSTRUCTOR AND PROTOTYPE\r\n\r\n  var InfiniteScroll = plugins.Plugin.inherit({\r\n        klassName: \"InfiniteScroll\",\r\n\r\n        pluginName : \"lark.scrolls.infinitescroll\",\r\n\r\n        options : {\r\n\t\t\tdataSource: null,\r\n\t\t\thybrid: false,//can be true or an object with structure: { 'label': (markup or jQuery obj) }\r\n\t\t\tpercentage: 95//percentage scrolled to the bottom before more is loaded\r\n        },\r\n\r\n        _construct : function(elm,options) {\r\n\t        this.overrided(elm,options);\r\n\t\t\tthis.$element = this.$();\r\n\t\t\tthis.$element.addClass('infinitescroll');\r\n\t\t\t//this.options = langx.mixin({}, $.fn.infinitescroll.defaults, options);\r\n\r\n\t\t\tthis.curScrollTop = this.$element.scrollTop();\r\n\t\t\tthis.curPercentage = this.getPercentage();\r\n\t\t\tthis.fetchingData = false;\r\n\r\n\t\t\tthis.$element.on('scroll.domx.infinitescroll', langx.proxy(this.onScroll, this));\r\n\t\t\tthis.onScroll();\r\n\t\t},\r\n\r\n\t\tdestroy: function () {\r\n\t\t\tthis.$element.remove();\r\n\t\t\t// any external bindings\r\n\t\t\t// [none]\r\n\r\n\t\t\t// empty elements to return to original markup\r\n\t\t\tthis.$element.empty();\r\n\r\n\t\t\treturn this.$element[0].outerHTML;\r\n\t\t},\r\n\r\n\t\tdisable: function () {\r\n\t\t\tthis.$element.off('scroll.domx.infinitescroll');\r\n\t\t},\r\n\r\n\t\tenable: function () {\r\n\t\t\tthis.$element.on('scroll.domx.infinitescroll', langx.proxy(this.onScroll, this));\r\n\t\t},\r\n\r\n\t\tend: function (content) {\r\n\t\t\tvar end = $('<div class=\"infinitescroll-end\"></div>');\r\n\t\t\tif (content) {\r\n\t\t\t\tend.append(content);\r\n\t\t\t} else {\r\n\t\t\t\tend.append('---------');\r\n\t\t\t}\r\n\r\n\t\t\tthis.$element.append(end);\r\n\t\t\tthis.disable();\r\n\t\t},\r\n\r\n\t\tgetPercentage: function () {\r\n\t\t\tvar height = (this.$element.css('box-sizing') === 'border-box') ? this.$element.outerHeight() : this.$element.height();\r\n\t\t\tvar scrollHeight = this.$element.get(0).scrollHeight;\r\n\t\t\treturn (scrollHeight > height) ? ((height / (scrollHeight - this.curScrollTop)) * 100) : 0;\r\n\t\t},\r\n\r\n\t\tfetchData: function (force) {\r\n\t\t\tvar load = $('<div class=\"infinitescroll-load\"></div>');\r\n\t\t\tvar self = this;\r\n\t\t\tvar moreBtn;\r\n\r\n\t\t\tvar fetch = function () {\r\n\t\t\t\tvar helpers = {\r\n\t\t\t\t\tpercentage: self.curPercentage,\r\n\t\t\t\t\tscrollTop: self.curScrollTop\r\n\t\t\t\t};\r\n\t\t\t\tvar $loader = $('<div class=\"loader\"></div>');\r\n\t\t\t\tload.append($loader);\r\n\t\t\t\t$loader.loader();\r\n\t\t\t\tif (self.options.dataSource) {\r\n\t\t\t\t\tself.options.dataSource(helpers, function (resp) {\r\n\t\t\t\t\t\tvar end;\r\n\t\t\t\t\t\tload.remove();\r\n\t\t\t\t\t\tif (resp.content) {\r\n\t\t\t\t\t\t\tself.$element.append(resp.content);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (resp.end) {\r\n\t\t\t\t\t\t\tend = (resp.end !== true) ? resp.end : undefined;\r\n\t\t\t\t\t\t\tself.end(end);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tself.fetchingData = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tthis.fetchingData = true;\r\n\t\t\tthis.$element.append(load);\r\n\t\t\tif (this.options.hybrid && force !== true) {\r\n\t\t\t\tmoreBtn = $('<button type=\"button\" class=\"btn btn-primary\"></button>');\r\n\t\t\t\tif (typeof this.options.hybrid === 'object') {\r\n\t\t\t\t\tmoreBtn.append(this.options.hybrid.label);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmoreBtn.append('<span class=\"glyphicon glyphicon-repeat\"></span>');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmoreBtn.on('click.domx.infinitescroll', function () {\r\n\t\t\t\t\tmoreBtn.remove();\r\n\t\t\t\t\tfetch();\r\n\t\t\t\t});\r\n\t\t\t\tload.append(moreBtn);\r\n\t\t\t} else {\r\n\t\t\t\tfetch();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonScroll: function (e) {\r\n\t\t\tthis.curScrollTop = this.$element.scrollTop();\r\n\t\t\tthis.curPercentage = this.getPercentage();\r\n\t\t\tif (!this.fetchingData && this.curPercentage >= this.options.percentage) {\r\n\t\t\t\tthis.fetchData();\r\n\t\t\t}\r\n\t\t}\r\n  });\r\n\r\n  plugins.register(InfiniteScroll);\r\n\r\n  return scrolls.InfiniteScroll = InfiniteScroll;\t\r\n});\r\n\ndefine('skylark-domx-plugins-scrolls/scrolling-element',[\r\n\t\"./scrolls\"\r\n],function(scrolls){\r\n\tfunction scrollingElement() {\r\n\t\treturn document.scrollingElement || document.documentElement;\r\n\t}\r\n\t\r\n\treturn scrolls.scrollingElement = scrollingElement;\r\n});\ndefine('skylark-domx-plugins-scrolls/scroll-spy',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./scrolls\"\n],function(langx,browser,eventer,noder,geom,$,plugins,scrolls){\n\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  var ScrollSpy =  plugins.Plugin.inherit({\n    klassName: \"ScrollSpy\",\n\n    pluginName : \"lark.scrolls.scrollspy\",\n\n    options: {\n      offset: 10\n    },\n\n    _construct : function(elm,options) {\n      this.overrided(elm,options);\n      this.$body          = $(document.body)\n      this.$scrollElement = this.$().is(document.body) ? $(window) : this.$();\n      //this.options        = langx.mixin({}, ScrollSpy.DEFAULTS, options)\n      this.selector       = (this.options.target || '') + ' .nav li > a'\n      this.offsets        = []\n      this.targets        = []\n      this.activeTarget   = null\n      this.scrollHeight   = 0\n\n      this.$scrollElement.on('scroll.scrollspy', langx.proxy(this.process, this))\n      this.refresh()\n      this.process()\n    },\n\n    getScrollHeight : function () {\n      return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n    },\n\n    refresh : function () {\n      var that          = this\n      var offsetMethod  = 'offset'\n      var offsetBase    = 0\n\n      this.offsets      = []\n      this.targets      = []\n      this.scrollHeight = this.getScrollHeight()\n\n      if (!langx.isWindow(this.$scrollElement[0])) {\n        offsetMethod = 'position'\n        offsetBase   = this.$scrollElement.scrollTop()\n      }\n\n      this.$body\n        .find(this.selector)\n        .map(function () {\n          var $el   = $(this)\n          var href  = $el.data('target') || $el.attr('href')\n          var $href = /^#./.test(href) && $(href)\n\n          return ($href\n            && $href.length\n            && $href.is(':visible')\n            && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n        })\n        .sort(function (a, b) { return a[0] - b[0] })\n        .each(function () {\n          that.offsets.push(this[0])\n          that.targets.push(this[1])\n        })\n    },\n\n    process : function () {\n      var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n      var scrollHeight = this.getScrollHeight()\n      var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n      var offsets      = this.offsets\n      var targets      = this.targets\n      var activeTarget = this.activeTarget\n      var i\n\n      if (this.scrollHeight != scrollHeight) {\n        this.refresh()\n      }\n\n      if (scrollTop >= maxScroll) {\n        return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n      }\n\n      if (activeTarget && scrollTop < offsets[0]) {\n        this.activeTarget = null\n        return this.clear()\n      }\n\n      for (i = offsets.length; i--;) {\n        activeTarget != targets[i]\n          && scrollTop >= offsets[i]\n          && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n          && this.activate(targets[i])\n      }\n    },\n\n    activate : function (target) {\n      this.activeTarget = target\n\n      this.clear()\n\n      var selector = this.selector +\n        '[data-target=\"' + target + '\"],' +\n        this.selector + '[href=\"' + target + '\"]'\n\n      var active = $(selector)\n        .parents('li')\n        .addClass('active')\n\n      if (active.parent('.dropdown-menu').length) {\n        active = active\n          .closest('li.dropdown')\n          .addClass('active')\n      }\n\n      active.trigger('activate.scrollspy')\n    },\n\n    clear : function () {\n      $(this.selector)\n        .parentsUntil(this.options.target, '.active')\n        .removeClass('active')\n    }\n\n  });\n\n  plugins.register(ScrollSpy);\n\n  return scrolls.ScrollSpy = ScrollSpy;\n\n});\n\ndefine('skylark-domx-plugins-scrolls/main',[\r\n    \"./scrolls\",\r\n    \"./affix\",\r\n    \"./auto-scroll\",\r\n    \"./infinite-scroll\",\r\n    \"./scrolling-element\",\r\n    \"./scroll-spy\"\r\n], function(scrolls) {\r\n    return scrolls;\r\n});\ndefine('skylark-domx-plugins-scrolls', ['skylark-domx-plugins-scrolls/main'], function (main) { return main; });\n\n"]}